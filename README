###𝑪𝑹𝑬𝑨𝑻𝑬 𝑨𝑵𝑫 𝑴𝑰𝑵𝑻 𝑻𝑶𝑲𝑬𝑵

The contract MyToken inherits from the ERC20 contract, which is a standard implementation of ERC20 tokens provided by OpenZeppelin. It introduces a new token named
"MyToken" with symbol "MTK".Upon deployment, the contract initializes by minting 1,000,000 tokens and assigning them to the deployer's address. The deployer is also
designated as the owner of the contract. The contract includes functions to mint (mint) new tokens, restricted to only the owner of the contract, and to burn (burn)
tokens, which any token holder can initiate to reduce their token balance. These functionalities leverage the inherent security and interoperability of ERC20 tokens
, making it suitable for various tokenization applications on the Ethereum blockchain.

###𝐃𝐄𝐒𝐂𝐑𝐈𝐏𝐓𝐈𝐎𝐍

The MyToken contract is a Solidity smart contract designed to deploy and manage an ERC20 token on the Ethereum blockchain. It extends the functionality of ERC20 
tokens provided by the OpenZeppel in library, offering essential features for token creation, ownership management, and token transfers.

###𝐆𝐄𝐓𝐓𝐈𝐍𝐆 𝐒𝐓𝐀𝐑𝐓𝐄𝐃

To run this program, you can use Remix, an online Solidity IDE. To get started, go to the Remix website at https://remix.ethereum.org/.

###EXECUTING THE PROGRAM 

How to run the program

1] Open Remix IDE.
2] Create a new file and paste the MyToken.sol contract code.
3] Compile the contract.
4] Interact with the deployed contract through the Remix interface.


// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import "@openzeppelin/contracts/token/ERC20/ERC20.sol";

contract MyToken is ERC20 {
    address public owner;

    constructor() ERC20("MyToken", "MTK") {
        _mint(msg.sender, 1000000 * 10 ** decimals());
        owner = msg.sender;
    }

    function mint(address to, uint256 amount) public {
        require(msg.sender == owner, "Only the owner can mint");
        _mint(to, amount);
    }



    function burn(uint256 amount) public {
        _burn(msg.sender, amount);
    }
}


###𝑨𝑼𝑻𝑯𝑶𝑹𝑺
𝐁𝐈𝐏𝐀𝐍𝐒𝐇𝐔
𝐛𝐢𝐩𝐚𝐧𝐬𝐡𝐮𝐠𝐚𝐫𝐠𝟔𝟖𝟑@𝐠𝐦𝐚𝐢𝐥.𝐜𝐨𝐦

###License
This project is licensed under the [NAME HERE] License - see the LICENSE.md file for details

